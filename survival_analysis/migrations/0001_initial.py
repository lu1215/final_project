# Generated by Django 4.1 on 2023-12-12 03:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hg38GeneTranscripts20180130',
            fields=[
                ('gene', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('transcripts', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hg38_gene_transcripts_20180130',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IsoformStrutureInfo',
            fields=[
                ('isoform_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('gene_name', models.CharField(blank=True, max_length=100, null=True)),
                ('chromsome', models.CharField(blank=True, max_length=100, null=True)),
                ('strand', models.CharField(blank=True, max_length=100, null=True)),
                ('isoform_region', models.CharField(blank=True, max_length=100, null=True)),
                ('exon', models.TextField(blank=True, null=True)),
                ('cds', models.TextField(blank=True, db_column='CDS', null=True)),
            ],
            options={
                'db_table': 'Isoform_struture_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MutualRelationship',
            fields=[
                ('no', models.IntegerField(db_column='No', primary_key=True, serialize=False)),
                ('primary_site', models.CharField(blank=True, max_length=100, null=True)),
                ('project', models.CharField(blank=True, max_length=100, null=True)),
                ('condition1', models.CharField(blank=True, max_length=100, null=True)),
                ('condition2', models.CharField(blank=True, max_length=100, null=True)),
                ('genes', models.CharField(blank=True, max_length=100, null=True)),
                ('isoforms', models.CharField(blank=True, max_length=100, null=True)),
                ('field_of_normal', models.CharField(db_column='#_of_normal', max_length=100)),
                ('field_of_stage_1', models.CharField(db_column='#_of_stage_1', max_length=100)),
                ('field_of_stage_2', models.CharField(db_column='#_of_stage_2', max_length=100)),
                ('field_of_stage_3', models.CharField(db_column='#_of_stage_3', max_length=100)),
                ('field_of_stage_4', models.CharField(db_column='#_of_stage_4', max_length=100)),
                ('field_of_stage_5', models.CharField(db_column='#_of_stage_5', max_length=100)),
                ('field_of_nos', models.CharField(db_column='#_of_nos', max_length=100)),
                ('field_of_is', models.CharField(db_column='#_of_is', max_length=100)),
                ('field_of_tumor', models.CharField(db_column='#_of_tumor', max_length=100)),
            ],
            options={
                'db_table': 'Mutual_Relationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MutualRelationshipSearch3',
            fields=[
                ('no', models.IntegerField(db_column='No', primary_key=True, serialize=False)),
                ('primary_site', models.CharField(blank=True, max_length=100, null=True)),
                ('project', models.CharField(blank=True, max_length=100, null=True)),
                ('condition1', models.CharField(blank=True, max_length=100, null=True)),
                ('condition2', models.CharField(blank=True, max_length=100, null=True)),
                ('genes', models.CharField(blank=True, max_length=100, null=True)),
                ('isoforms', models.CharField(blank=True, max_length=100, null=True)),
                ('field_of_normal', models.CharField(db_column='#_of_normal', max_length=100)),
                ('field_of_stage_1', models.CharField(db_column='#_of_stage_1', max_length=100)),
                ('field_of_stage_2', models.CharField(db_column='#_of_stage_2', max_length=100)),
                ('field_of_stage_3', models.CharField(db_column='#_of_stage_3', max_length=100)),
                ('field_of_stage_4', models.CharField(db_column='#_of_stage_4', max_length=100)),
                ('field_of_stage_5', models.CharField(db_column='#_of_stage_5', max_length=100)),
                ('field_of_nos', models.CharField(db_column='#_of_nos', max_length=100)),
                ('field_of_is', models.CharField(db_column='#_of_is', max_length=100)),
                ('field_of_tumor', models.CharField(db_column='#_of_tumor', max_length=100)),
            ],
            options={
                'db_table': 'Mutual_Relationship_search3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NcbiGeneInfo20180201',
            fields=[
                ('tax_id', models.CharField(blank=True, max_length=100, null=True)),
                ('geneid', models.CharField(db_column='GeneID', max_length=100, primary_key=True, serialize=False)),
                ('gene_link', models.CharField(blank=True, db_column='Gene_link', max_length=100, null=True)),
                ('symbol', models.CharField(blank=True, db_column='Symbol', max_length=100, null=True)),
                ('locustag', models.TextField(blank=True, db_column='LocusTag', null=True)),
                ('synonyms', models.TextField(blank=True, db_column='Synonyms', null=True)),
                ('dbxrefs', models.TextField(blank=True, db_column='dbXrefs', null=True)),
                ('chromosome', models.TextField(blank=True, null=True)),
                ('map_location', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type_of_gene', models.TextField(blank=True, null=True)),
                ('symbol_from_nomenclature_authority', models.TextField(blank=True, db_column='Symbol_from_nomenclature_authority', null=True)),
                ('full_name_from_nomenclature_authority', models.TextField(blank=True, db_column='Full_name_from_nomenclature_authority', null=True)),
                ('nomenclature_status', models.TextField(blank=True, db_column='Nomenclature_status', null=True)),
                ('other_designations', models.TextField(blank=True, db_column='Other_designations', null=True)),
                ('modification_date', models.TextField(blank=True, db_column='Modification_date', null=True)),
                ('feature_type', models.TextField(blank=True, db_column='Feature_type', null=True)),
            ],
            options={
                'db_table': 'NCBI_gene_info_20180201',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NcbiTranscriptInfo20180209',
            fields=[
                ('transcript_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('definition', models.TextField(blank=True, null=True)),
                ('transcript_variant', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'NCBI_transcript_info_20180209',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByDataBoxplot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_data_boxplot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByDataDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_data_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByDataFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_data_filter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByDataSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_data_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGene2Boxplot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene2_boxplot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGene2Others',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene2_others',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGene2SurvivalPlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene2_survival_plot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGeneBoxplot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene_boxplot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGeneDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryByGeneFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'query_by_gene_filter',
                'managed': False,
            },
        ),
    ]
